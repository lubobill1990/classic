<?php

/**
 * This is the model base class for the table "classic_time_site".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "TimeSite".
 *
 * Columns in table "classic_time_site" available as properties of the model,
 * followed by relations of table "classic_time_site" available as properties of the model.
 *
 * @property string $id
 * @property string $class_id
 * @property string $classroom
 * @property string $campus
 * @property integer $day_of_week
 * @property integer $begin_time
 * @property integer $end_time
 * @property integer $begin_week
 * @property integer $end_week
 * @property string $week_info
 * @property string $week_frequency
 * @property string $campus_id
 *
 * @property ActualClass $class
 */
abstract class BaseTimeSite extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'classic_time_site';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'TimeSite|TimeSites', $n);
	}

	public static function representingColumn() {
		return 'week_frequency';
	}

	public function rules() {
		return array(
			array('class_id', 'required'),
			array('day_of_week, begin_time, end_time, begin_week, end_week', 'numerical', 'integerOnly'=>true),
			array('class_id', 'length', 'max'=>10),
			array('classroom', 'length', 'max'=>255),
			array('campus, week_info', 'length', 'max'=>45),
			array('week_frequency, campus_id', 'length', 'max'=>5),
			array('classroom, campus, day_of_week, begin_time, end_time, begin_week, end_week, week_info, week_frequency, campus_id', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, class_id, classroom, campus, day_of_week, begin_time, end_time, begin_week, end_week, week_info, week_frequency, campus_id', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'class' => array(self::BELONGS_TO, 'ActualClass', 'class_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'class_id' => null,
			'classroom' => Yii::t('app', 'Classroom'),
			'campus' => Yii::t('app', 'Campus'),
			'day_of_week' => Yii::t('app', 'Day Of Week'),
			'begin_time' => Yii::t('app', 'Begin Time'),
			'end_time' => Yii::t('app', 'End Time'),
			'begin_week' => Yii::t('app', 'Begin Week'),
			'end_week' => Yii::t('app', 'End Week'),
			'week_info' => Yii::t('app', 'Week Info'),
			'week_frequency' => Yii::t('app', 'Week Frequency'),
			'campus_id' => Yii::t('app', 'Campus'),
			'class' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('class_id', $this->class_id);
		$criteria->compare('classroom', $this->classroom, true);
		$criteria->compare('campus', $this->campus, true);
		$criteria->compare('day_of_week', $this->day_of_week);
		$criteria->compare('begin_time', $this->begin_time);
		$criteria->compare('end_time', $this->end_time);
		$criteria->compare('begin_week', $this->begin_week);
		$criteria->compare('end_week', $this->end_week);
		$criteria->compare('week_info', $this->week_info, true);
		$criteria->compare('week_frequency', $this->week_frequency, true);
		$criteria->compare('campus_id', $this->campus_id, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}

    public function getTimeString(){

        return Common::dayOfWeek($this->day_of_week)." {$this->begin_time}-{$this->end_time}èŠ‚";
    }
}