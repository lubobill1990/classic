<?php

/**
 * This is the model base class for the table "global_user_login_log".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserLoginLog".
 *
 * Columns in table "global_user_login_log" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $user_login_id
 * @property string $ip
 * @property string $timestamp
 * @property string $success
 * @property string $is_real_user
 *
 */
abstract class BaseUserLoginLog extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'global_user_login_log';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserLoginLog|UserLoginLogs', $n);
	}

	public static function representingColumn() {
		return 'user_login_id';
	}

	public function rules() {
		return array(
			array('user_login_id, ip', 'required'),
			array('user_login_id, ip', 'length', 'max'=>50),
			array('success, is_real_user', 'length', 'max'=>3),
			array('success, is_real_user', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, user_login_id, ip, timestamp, success, is_real_user', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'user_login_id' => Yii::t('app', 'User Login'),
			'ip' => Yii::t('app', 'Ip'),
			'timestamp' => Yii::t('app', 'Timestamp'),
			'success' => Yii::t('app', 'Success'),
			'is_real_user' => Yii::t('app', 'Is Real User'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('user_login_id', $this->user_login_id, true);
		$criteria->compare('ip', $this->ip, true);
		$criteria->compare('timestamp', $this->timestamp, true);
		$criteria->compare('success', $this->success, true);
		$criteria->compare('is_real_user', $this->is_real_user, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}